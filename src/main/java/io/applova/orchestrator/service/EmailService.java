package io.applova.orchestrator.service;

import io.applova.orchestrator.model.dto.ZohoWebhookPayload;
import reactor.core.publisher.Mono;

/**
 * Service for sending emails through SendGrid or other email providers.
 */
public interface EmailService {
    /**
     * Send an auto-reply email based on the Zoho webhook payload and GPT response.
     *
     * @param payload       The Zoho webhook payload containing contact information
     * @param kbResponse    The response generated by the knowledge base service
     * @return A Mono containing the email message ID
     */
    Mono<String> sendAutoReply(ZohoWebhookPayload payload, String kbResponse);

    /**
     * Send a status update email for a specific ticket.
     *
     * @param emailMessageId The original email message ID
     * @param jiraKey        The Jira ticket key
     * @param newStatus      The new status of the ticket
     * @return A Mono indicating the completion of sending the status update email
     */
    Mono<Void> sendStatusUpdate(String emailMessageId, String jiraKey, String newStatus);

    /**
     * Create an initial email thread for a ticket without an existing email.
     *
     * @param zohoRecordId The Zoho record ID
     * @param jiraKey      The Jira ticket key
     * @param status       The current status of the ticket
     * @return A Mono containing the new email message ID
     */
    Mono<String> createInitialTicketEmail(String zohoRecordId, String jiraKey, String status);
}

